<?xml version="1.0"?>
<robot name="pipe_sprite" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="body_color" value="Gazebo/Silver"/>
    <xacro:property name="wheel_color" value="Gazebo/DarkGrey"/>
    <xacro:property name="sensor_color" value="Gazebo/Black"/>

    <!-- Camera Settings -->
    <xacro:property name="camera_fov" value="2.967"/> <!-- Default 170 degrees -->
    <xacro:property name="image_width" value="800"/>
    <xacro:property name="image_height" value="800"/>
    <xacro:property name="camera_fps" value="30"/>
    <xacro:property name="camera_head_offset" value="0.035"/>

    <!-- Laser Settings -->
    <xacro:property name="laser_samples" value="720"/>          <!-- Adjustable -->
    <xacro:property name="laser_camera_offset" value="0.0125"/> <!-- Adjustable -->
    <xacro:property name="laser_head_offset" value="0.01"/>
    <xacro:property name="laser_rod_length" value="${laser_camera_offset + laser_head_offset}"/>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/pipe_sprite</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>

    <!-- Ground Truth -->
    <gazebo>
        <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>100</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>/pipe_sprite/odometry/gt</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>world</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>
    </gazebo>

    <gazebo reference="base_link">
        <material>${body_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>false</selfCollide>
        <gravity>true</gravity>
    </gazebo>

    <gazebo reference="left_rear_wheel_link">
        <material>${wheel_color}</material>
        <mu1>10</mu1>
        <mu2>10</mu2>
        <maxVel>0.0</maxVel>
        <minDepth>0.0001</minDepth>
        <kp>100000.0</kp>
        <kd>1.0</kd>
        <selfCollide>false</selfCollide>
    </gazebo>

    <gazebo reference="left_front_wheel_link">
        <material>${wheel_color}</material>
        <mu1>10</mu1>
        <mu2>10</mu2>
        <maxVel>0.0</maxVel>
        <minDepth>0.0001</minDepth>
        <kp>100000.0</kp>
        <kd>1.0</kd>
        <selfCollide>false</selfCollide>
    </gazebo>

    <gazebo reference="right_rear_wheel_link">
        <material>${wheel_color}</material>
        <mu1>10</mu1>
        <mu2>10</mu2>
        <maxVel>0.0</maxVel>
        <minDepth>0.0001</minDepth>
        <kp>100000.0</kp>
        <kd>1.0</kd>
        <selfCollide>false</selfCollide>
    </gazebo>

    <gazebo reference="right_front_wheel_link">
        <material>${wheel_color}</material>
        <mu1>10</mu1>
        <mu2>10</mu2>
        <maxVel>0.0</maxVel>
        <minDepth>0.0001</minDepth>
        <kp>100000.0</kp>
        <kd>1.0</kd>
        <selfCollide>false</selfCollide>
    </gazebo>

    <!-- Camera -->
    <gazebo reference="camera_visual_link">
        <material>${sensor_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>false</selfCollide>
        <gravity>true</gravity>
    </gazebo>

    <gazebo reference="camera_link">
        <material>${sensor_color}</material>
        <selfCollide>false</selfCollide>
        <sensor type="camera" name="camera1">
            <update_rate>${camera_fps}</update_rate>
            <camera name="head">
                <horizontal_fov>${camera_fov}</horizontal_fov>
                <image>
                    <width>${image_width}</width>
                    <height>${image_height}</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>pipe_sprite</cameraName>
                <imageTopicName>image_visual</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- IMU -->
    <gazebo reference="imu_link">
        <material>${sensor_color}</material>
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>/pipe_sprite/imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>100.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>

    <!-- Laser -->
    <gazebo reference="laser_rod_link">
        <material>${sensor_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>false</selfCollide>
        <gravity>true</gravity>
    </gazebo>

    <gazebo reference="laser_link">
        <material>${sensor_color}</material>
        <selfCollide>false</selfCollide>
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>${camera_fps}</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>${laser_samples}</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.0025</min>
                    <max>30.0</max>
                    <resolution>0.0005</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.00025</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
                <topicName>/pipe_sprite/laser/scan</topicName>
                <frameName>laser_link</frameName>
            </plugin>
        </sensor>
    </gazebo>


</robot>